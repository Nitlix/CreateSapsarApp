/*!
 * on-finished
 * Copyright(c) 2013 Jonathan Ong
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */
"use strict";module.exports=onFinished,module.exports.isFinished=isFinished;var asyncHooks=tryRequireAsyncHooks(),first=require("ee-first"),defer="function"==typeof setImmediate?setImmediate:function(fn){process.nextTick(fn.bind.apply(fn,arguments))};function onFinished(msg,listener){return!1!==isFinished(msg)?(defer(listener,null,msg),msg):(attachListener(msg,wrap(listener)),msg)}function isFinished(msg){var socket=msg.socket;return"boolean"==typeof msg.finished?Boolean(msg.finished||socket&&!socket.writable):"boolean"==typeof msg.complete?Boolean(msg.upgrade||!socket||!socket.readable||msg.complete&&!msg.readable):void 0}function attachFinishedListener(msg,callback){var eeMsg,eeSocket,finished=!1;function onFinish(error){eeMsg.cancel(),eeSocket.cancel(),finished=!0,callback(error)}function onSocket(socket){msg.removeListener("socket",onSocket),finished||eeMsg===eeSocket&&(eeSocket=first([[socket,"error","close"]],onFinish))}eeMsg=eeSocket=first([[msg,"end","finish"]],onFinish),msg.socket?onSocket(msg.socket):(msg.on("socket",onSocket),void 0===msg.socket&&patchAssignSocket(msg,onSocket))}function attachListener(msg,listener){var attached=msg.__onFinished;attached&&attached.queue||(attached=msg.__onFinished=createListener(msg),attachFinishedListener(msg,attached)),attached.queue.push(listener)}function createListener(msg){function listener(err){if(msg.__onFinished===listener&&(msg.__onFinished=null),listener.queue){var queue=listener.queue;listener.queue=null;for(var i=0;i<queue.length;i++)queue[i](err,msg)}}return listener.queue=[],listener}function patchAssignSocket(res,callback){var assignSocket=res.assignSocket;"function"==typeof assignSocket&&(res.assignSocket=function(socket){assignSocket.call(this,socket),callback(socket)})}function tryRequireAsyncHooks(){try{return require("async_hooks")}catch(e){return{}}}function wrap(fn){var res;return asyncHooks.AsyncResource&&(res=new asyncHooks.AsyncResource(fn.name||"bound-anonymous-fn")),res&&res.runInAsyncScope?res.runInAsyncScope.bind(res,fn,null):fn}