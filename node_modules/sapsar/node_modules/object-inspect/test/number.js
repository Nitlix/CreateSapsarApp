var test=require("tape"),v=require("es-value-fixtures"),forEach=require("for-each"),inspect=require("../");test("negative zero",(function(t){t.equal(inspect(0),"0",'inspect(0) === "0"'),t.equal(inspect(Object(0)),"Object(0)",'inspect(Object(0)) === "Object(0)"'),t.equal(inspect(-0),"-0",'inspect(-0) === "-0"'),t.equal(inspect(Object(-0)),"Object(-0)",'inspect(Object(-0)) === "Object(-0)"'),t.end()})),test("numericSeparator",(function(t){forEach(v.nonBooleans,(function(nonBoolean){t.throws((function(){inspect(!0,{numericSeparator:nonBoolean})}),TypeError,inspect(nonBoolean)+" is not a boolean")})),t.test("3 digit numbers",(function(st){for(var failed=!1,i=-999;i<1e3;i+=1){var actual=inspect(i),actualSepNo=inspect(i,{numericSeparator:!1}),actualSepYes=inspect(i,{numericSeparator:!0}),expected=String(i);actual===expected&&actualSepNo===expected&&actualSepYes===expected||(failed=!0,t.equal(actual,expected),t.equal(actualSepNo,expected),t.equal(actualSepYes,expected))}st.notOk(failed,"all 3 digit numbers passed"),st.end()})),t.equal(inspect(1e3),"1000","1000"),t.equal(inspect(1e3,{numericSeparator:!1}),"1000","1000, numericSeparator false"),t.equal(inspect(1e3,{numericSeparator:!0}),"1_000","1000, numericSeparator true"),t.equal(inspect(-1e3),"-1000","-1000"),t.equal(inspect(-1e3,{numericSeparator:!1}),"-1000","-1000, numericSeparator false"),t.equal(inspect(-1e3,{numericSeparator:!0}),"-1_000","-1000, numericSeparator true"),t.equal(inspect(1234.5678,{numericSeparator:!0}),"1_234.567_8","fractional numbers get separators"),t.equal(inspect(1234.56789,{numericSeparator:!0}),"1_234.567_89","fractional numbers get separators"),t.equal(inspect(1234.567891,{numericSeparator:!0}),"1_234.567_891","fractional numbers get separators"),t.end()}));