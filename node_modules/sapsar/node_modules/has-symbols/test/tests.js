"use strict";module.exports=function(t){if(t.equal(typeof Symbol,"function","global Symbol is a function"),"function"!=typeof Symbol)return!1;t.notEqual(Symbol(),Symbol(),"two symbols are not equal"),t.equal(typeof Symbol.prototype.toString,"function","Symbol#toString is a function"),t.equal(typeof Object.getOwnPropertySymbols,"function","Object.getOwnPropertySymbols is a function");var obj={},sym=Symbol("test"),symObj=Object(sym);t.notEqual(typeof sym,"string","Symbol is not a string"),t.equal(Object.prototype.toString.call(sym),"[object Symbol]","symbol primitive Object#toStrings properly"),t.equal(Object.prototype.toString.call(symObj),"[object Symbol]","symbol primitive Object#toStrings properly");var symVal=42;for(sym in obj[sym]=symVal,obj)t.fail("symbol property key was found in for..in of object");t.deepEqual(Object.keys(obj),[],"no enumerable own keys on symbol-valued object"),t.deepEqual(Object.getOwnPropertyNames(obj),[],"no own names on symbol-valued object"),t.deepEqual(Object.getOwnPropertySymbols(obj),[sym],"one own symbol on symbol-valued object"),t.equal(Object.prototype.propertyIsEnumerable.call(obj,sym),!0,"symbol is enumerable"),t.deepEqual(Object.getOwnPropertyDescriptor(obj,sym),{configurable:!0,enumerable:!0,value:42,writable:!0},"property descriptor is correct")};