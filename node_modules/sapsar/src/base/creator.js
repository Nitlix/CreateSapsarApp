import fs from"fs";const create=["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h6","head","header","hr","html","i","iframe","img","input","ins","kbd","label","legend","li","link","main","map","mark","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","u","ul","video","wbr","webview","xmp"];let base='import constructor from "../constructor.js";\n\nconst seperate = (args) => {\n    const propsIndex = args.findIndex((input) => typeof input === "object");\n    const props = propsIndex !== -1 ? args.splice(propsIndex, 1)[0] : {};\n\n    const content = args.join(""); // Combine all remaining string inputs\n\n\n    return {\n        content: content,\n        props: props,\n    };\n}\n\n\n';create.forEach((sign=>{base+=`export function ${sign}(...args){\n    const { content, props } = seperate(args);\n    \n    return constructor(content, props, "${sign}");\n}\n\n`})),fs.writeFileSync("./base.js",base);