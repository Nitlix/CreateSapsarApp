const ParseArgs = require('../basic/ParseArgs')
const MergeProps = require('../basic/MergeProps')
const { a, manualScript } = require('sapsar/base')

const { genChars } = require('../util/Random')

function TouchLink(...args){
    const { content, props } = ParseArgs(args)

    const id = `stl_${genChars(15)}`

    if (props.redirect === undefined) props.redirect = '#'

    return a(
        MergeProps(
            props,
            {
                class: id
            }
        ),
        content,
        manualScript(`
            const ${id} = {
                el: document.querySelector('.${id}'),
                href: '${props.redirect}',
                swap: null
            }

            new IntersectionObserver(()=>{
                console.log("fetching")
                fetch(${id}.href).then(res=>res.text()).then(res=>{
                    ${id}.swap = res;
                })

            }, {root: ${id}.el,rootMargin: "500px",threshold: 0}).observe(${id}.el)

            ${id}.el.addEventListener('click',(event)=>{
                event.preventDefault()

                while(!${id}.swap){
                    
                }

                document.body.innerHTML = ${id}.swap.match(/<body[^>]*>([^]*)<\\/body>/)[1]
                document.head.innerHTML = ${id}.swap.match(/<head[^>]*>([^]*)<\\/head>/)[1]
                document.head.innerHTML += ${id}.swap.split('</html>')[1]
                window.history.replaceState({ additionalInformation: 'Sapsar TouchLink' }, document.title, ${id}.href);
            })

            window.addEventListener('popstate', () => {
                // Update the HTML here
                const bodyMatch = GENID.swap.match(/<body[^>]*>([^]*)<\/body>/);
                const headMatch = GENID.swap.match(/<head[^>]*>([^]*)<\/head>/);
              
                if (bodyMatch && headMatch) {
                  document.body.innerHTML = bodyMatch[1];
                  document.head.innerHTML = headMatch[1];
                  document.head.innerHTML += GENID.swap.split('</html>')[1];
                }
              });

        `)
    )
}

module.exports = TouchLink